// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.19.6
// source: linkleaf/v1/feed.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Feed struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Version uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Title   string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// RFC3339 UTC (e.g., 2025-08-18T12:34:56Z), set when you publish.
	GeneratedAt   string  `protobuf:"bytes,3,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	Links         []*Link `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Feed) Reset() {
	*x = Feed{}
	mi := &file_linkleaf_v1_feed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_linkleaf_v1_feed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_linkleaf_v1_feed_proto_rawDescGZIP(), []int{0}
}

func (x *Feed) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Feed) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Feed) GetGeneratedAt() string {
	if x != nil {
		return x.GeneratedAt
	}
	return ""
}

func (x *Feed) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type Link struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stable short ID (e.g., hash(url + "|" + date)).
	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Url     string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Summary string   `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	Tags    []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	// YYYY-MM-DD
	Date string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	// Optional attribution ("via" URL).
	Via           string `protobuf:"bytes,7,opt,name=via,proto3" json:"via,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Link) Reset() {
	*x = Link{}
	mi := &file_linkleaf_v1_feed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_linkleaf_v1_feed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_linkleaf_v1_feed_proto_rawDescGZIP(), []int{1}
}

func (x *Link) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Link) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Link) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Link) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Link) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Link) GetVia() string {
	if x != nil {
		return x.Via
	}
	return ""
}

var File_linkleaf_v1_feed_proto protoreflect.FileDescriptor

const file_linkleaf_v1_feed_proto_rawDesc = "" +
	"\n" +
	"\x16linkleaf/v1/feed.proto\x12\vlinkleaf.v1\"\x82\x01\n" +
	"\x04Feed\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12!\n" +
	"\fgenerated_at\x18\x03 \x01(\tR\vgeneratedAt\x12'\n" +
	"\x05links\x18\x04 \x03(\v2\x11.linkleaf.v1.LinkR\x05links\"\x92\x01\n" +
	"\x04Link\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x18\n" +
	"\asummary\x18\x04 \x01(\tR\asummary\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12\x12\n" +
	"\x04date\x18\x06 \x01(\tR\x04date\x12\x10\n" +
	"\x03via\x18\a \x01(\tR\x03viaB:Z8github.com/doriancodes/linkleaf-cli/proto/linkleaf/v1;v1b\x06proto3"

var (
	file_linkleaf_v1_feed_proto_rawDescOnce sync.Once
	file_linkleaf_v1_feed_proto_rawDescData []byte
)

func file_linkleaf_v1_feed_proto_rawDescGZIP() []byte {
	file_linkleaf_v1_feed_proto_rawDescOnce.Do(func() {
		file_linkleaf_v1_feed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_linkleaf_v1_feed_proto_rawDesc), len(file_linkleaf_v1_feed_proto_rawDesc)))
	})
	return file_linkleaf_v1_feed_proto_rawDescData
}

var file_linkleaf_v1_feed_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_linkleaf_v1_feed_proto_goTypes = []any{
	(*Feed)(nil), // 0: linkleaf.v1.Feed
	(*Link)(nil), // 1: linkleaf.v1.Link
}
var file_linkleaf_v1_feed_proto_depIdxs = []int32{
	1, // 0: linkleaf.v1.Feed.links:type_name -> linkleaf.v1.Link
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_linkleaf_v1_feed_proto_init() }
func file_linkleaf_v1_feed_proto_init() {
	if File_linkleaf_v1_feed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_linkleaf_v1_feed_proto_rawDesc), len(file_linkleaf_v1_feed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_linkleaf_v1_feed_proto_goTypes,
		DependencyIndexes: file_linkleaf_v1_feed_proto_depIdxs,
		MessageInfos:      file_linkleaf_v1_feed_proto_msgTypes,
	}.Build()
	File_linkleaf_v1_feed_proto = out.File
	file_linkleaf_v1_feed_proto_goTypes = nil
	file_linkleaf_v1_feed_proto_depIdxs = nil
}
